"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateTagTypes = exports.generateEndpointDefinition = exports.generateCreateApiCall = exports.generateImportNode = exports.generateObjectProperties = void 0;
const factory_1 = require("./utils/factory");
const typescript_1 = __importDefault(require("typescript"));
const defaultEndpointBuilder = factory_1.factory.createIdentifier('build');
function generateObjectProperties(obj) {
    return Object.entries(obj)
        .filter(([_, v]) => v)
        .map(([k, v]) => factory_1.factory.createPropertyAssignment(factory_1.factory.createIdentifier(k), v));
}
exports.generateObjectProperties = generateObjectProperties;
function generateImportNode(pkg, namedImports, defaultImportName) {
    return factory_1.factory.createImportDeclaration(undefined, factory_1.factory.createImportClause(false, defaultImportName !== undefined ? factory_1.factory.createIdentifier(defaultImportName) : undefined, factory_1.factory.createNamedImports(Object.entries(namedImports).map(([propertyName, name]) => factory_1.factory.createImportSpecifier(name === propertyName ? undefined : factory_1.factory.createIdentifier(propertyName), factory_1.factory.createIdentifier(name))))), factory_1.factory.createStringLiteral(pkg));
}
exports.generateImportNode = generateImportNode;
function generateCreateApiCall({ endpointBuilder = defaultEndpointBuilder, endpointDefinitions, tag, }) {
    const injectEndpointsObjectLiteralExpression = factory_1.factory.createObjectLiteralExpression(generateObjectProperties({
        endpoints: factory_1.factory.createArrowFunction(undefined, undefined, [factory_1.factory.createParameterDeclaration(undefined, undefined, endpointBuilder, undefined, undefined, undefined)], undefined, factory_1.factory.createToken(typescript_1.default.SyntaxKind.EqualsGreaterThanToken), factory_1.factory.createParenthesizedExpression(endpointDefinitions)),
        overrideExisting: factory_1.factory.createFalse(),
    }), true);
    if (tag) {
        const enhanceEndpointsObjectLiteralExpression = factory_1.factory.createObjectLiteralExpression([factory_1.factory.createShorthandPropertyAssignment(factory_1.factory.createIdentifier('addTagTypes'), undefined)], true);
        return factory_1.factory.createVariableStatement(undefined, factory_1.factory.createVariableDeclarationList([
            factory_1.factory.createVariableDeclaration(factory_1.factory.createIdentifier('injectedRtkApi'), undefined, undefined, factory_1.factory.createCallExpression(factory_1.factory.createPropertyAccessExpression(factory_1.factory.createCallExpression(factory_1.factory.createPropertyAccessExpression(factory_1.factory.createIdentifier('api'), factory_1.factory.createIdentifier('enhanceEndpoints')), undefined, [enhanceEndpointsObjectLiteralExpression]), factory_1.factory.createIdentifier('injectEndpoints')), undefined, [injectEndpointsObjectLiteralExpression])),
        ], typescript_1.default.NodeFlags.Const));
    }
    return factory_1.factory.createVariableStatement(undefined, factory_1.factory.createVariableDeclarationList([
        factory_1.factory.createVariableDeclaration(factory_1.factory.createIdentifier('injectedRtkApi'), undefined, undefined, factory_1.factory.createCallExpression(factory_1.factory.createPropertyAccessExpression(factory_1.factory.createIdentifier('api'), factory_1.factory.createIdentifier('injectEndpoints')), undefined, [injectEndpointsObjectLiteralExpression])),
    ], typescript_1.default.NodeFlags.Const));
}
exports.generateCreateApiCall = generateCreateApiCall;
function generateEndpointDefinition({ operationName, type, Response, QueryArg, queryFn, endpointBuilder = defaultEndpointBuilder, extraEndpointsProps, tags, }) {
    const objectProperties = generateObjectProperties({ query: queryFn, ...extraEndpointsProps });
    if (tags.length > 0) {
        objectProperties.push(factory_1.factory.createPropertyAssignment(factory_1.factory.createIdentifier(type === 'query' ? 'providesTags' : 'invalidatesTags'), factory_1.factory.createArrayLiteralExpression(tags.map((tag) => factory_1.factory.createStringLiteral(tag), false))));
    }
    return factory_1.factory.createPropertyAssignment(factory_1.factory.createIdentifier(operationName), factory_1.factory.createCallExpression(factory_1.factory.createPropertyAccessExpression(endpointBuilder, factory_1.factory.createIdentifier(type)), [Response, QueryArg], [factory_1.factory.createObjectLiteralExpression(objectProperties, true)]));
}
exports.generateEndpointDefinition = generateEndpointDefinition;
function generateTagTypes({ addTagTypes }) {
    return factory_1.factory.createVariableStatement([factory_1.factory.createModifier(typescript_1.default.SyntaxKind.ExportKeyword)], factory_1.factory.createVariableDeclarationList([
        factory_1.factory.createVariableDeclaration(factory_1.factory.createIdentifier('addTagTypes'), undefined, undefined, factory_1.factory.createAsExpression(factory_1.factory.createArrayLiteralExpression(addTagTypes.map((tagType) => factory_1.factory.createStringLiteral(tagType)), true), factory_1.factory.createTypeReferenceNode(factory_1.factory.createIdentifier('const'), undefined))),
    ], typescript_1.default.NodeFlags.Const));
}
exports.generateTagTypes = generateTagTypes;
//# sourceMappingURL=codegen.js.map