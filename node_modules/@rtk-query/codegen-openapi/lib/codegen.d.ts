import ts from 'typescript';
export type ObjectPropertyDefinitions = Record<string, ts.Expression | undefined>;
export declare function generateObjectProperties(obj: ObjectPropertyDefinitions): ts.PropertyAssignment[];
export declare function generateImportNode(pkg: string, namedImports: Record<string, string>, defaultImportName?: string): ts.ImportDeclaration;
export declare function generateCreateApiCall({ endpointBuilder, endpointDefinitions, tag, }: {
    endpointBuilder?: ts.Identifier;
    endpointDefinitions: ts.ObjectLiteralExpression;
    tag: boolean;
}): ts.VariableStatement;
export declare function generateEndpointDefinition({ operationName, type, Response, QueryArg, queryFn, endpointBuilder, extraEndpointsProps, tags, }: {
    operationName: string;
    type: 'query' | 'mutation';
    Response: ts.TypeReferenceNode;
    QueryArg: ts.TypeReferenceNode;
    queryFn: ts.Expression;
    endpointBuilder?: ts.Identifier;
    extraEndpointsProps: ObjectPropertyDefinitions;
    tags: string[];
}): ts.PropertyAssignment;
export declare function generateTagTypes({ addTagTypes }: {
    addTagTypes: string[];
}): ts.VariableStatement;
